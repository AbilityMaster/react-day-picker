webpackJsonp([0xc770d3d50527],{349:function(e,t,n){(function(l){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0;var c=n(1),r=(a(c),n(16)),o=a(r),i=n(22),u=a(i),m=n(21),d=a(m),s=n(59),p=a(s);t.default=function(){return l.createElement(d.default,{title:"DayPickerInput API"},l.createElement(u.default,null,"import DayPickerInput from 'react-day-picker/DayPickerInput'"),l.createElement("h2",null,"API summary"),l.createElement("h4",null,"Component’s Props"),l.createElement("p",null,l.createElement("code",null,"<DayPickerInput />")," accepts all the props accepted by a standard ",l.createElement("code",null,"<input/>"),", plus the followings:"),l.createElement("p",null,l.createElement("a",{href:"#classNames"},"classNames"),","," ",l.createElement("a",{href:"#clickUnselectsDay"},"clickUnselectsDay"),","," ",l.createElement("a",{href:"#component"},"component"),","," ",l.createElement("a",{href:"#dayPickerProps"},"dayPickerProps"),", ",l.createElement("a",{href:"#format"},"format"),","," ",l.createElement("a",{href:"#hideOnDayClick"},"hideOnDayClick")),l.createElement("h4",null,"Event handlers"),l.createElement("p",null,l.createElement("a",{href:"#onDayChange"},"onDayChange")),l.createElement("h4",null,"Public methods"),l.createElement("p",null,l.createElement("a",{href:"#hideDayPicker"},"hideDayPicker"),","," ",l.createElement("a",{href:"#showDayPicker"},"showDayPicker")),l.createElement("hr",null),l.createElement(p.default,null,l.createElement("h2",null,"DayPickerInput Props"),l.createElement("h3",{id:"classNames"},"classNames ",l.createElement("code",null,"Object")),l.createElement("p",null,"Customize the CSS class names used when rendering the component."),l.createElement("p",null,"The object expects the following keys:"),l.createElement(u.default,null,"{\n  container,            // The container element\n  overlayWrapper,       // The overlay's wrapper\n  overlay,              // The overlay's container\n}"),l.createElement("h3",{id:"clickUnselectsDay"},"clickUnselectsDay ",l.createElement("code",null,"Boolean = false")),l.createElement("p",null,"Unselect and clear the input when clicking on a previously selected day."),l.createElement("h3",{id:"component"},"component ",l.createElement("code",null,'String | React.Component = "input"')),l.createElement("p",null,"The component class to render the input field."),l.createElement("p",null,"The component must be compatible with the standard HTML"," ",l.createElement("code",null,"input"),": i.e. it should support the",l.createElement("code",null,"onChange"),", ",l.createElement("code",null,"onFocus"),", ",l.createElement("code",null,"onKeyUp"),","," ",l.createElement("code",null,"onClick")," and ",l.createElement("code",null,"onBlur")," and the ",l.createElement("code",null,"focus")," ","props."),l.createElement("p",null,"If your custom component doesn’t support such props, wrap it in a component contaning them. For example:"),l.createElement(u.default,null,"import React from 'react';\nimport { DayPickerInput } from 'react-day-picker';\nimport MyInputWithoutFocus from './MyInputWithoutFocus';\n\nclass MyInputWithFocus extends React.Component {\n  focus = () => {\n    this.input.focus();\n  }\n  render() {\n    return (\n      <MyInputWithoutFocus \n        ref={el => (this.input = el)} \n        {...this.props} \n      />\n    );\n  }\n}\n\nfunction MyDayPickerInput(props) {\n  return <DayPickerInput component={MyInputWithFocus} />\n} \n"),l.createElement("h3",{id:"dayPickerProps"},"dayPickerProps ",l.createElement("code",null,"Object")),l.createElement("p",null,"The ",l.createElement(o.default,{to:"/api/DayPicker"},"DayPicker props")," to customize the calendar rendered in the overlay."),l.createElement("h3",{id:"format"},"format ",l.createElement("code",null,"String | Array<String>")),l.createElement("p",null,"The format strings used for parsing the date entered in the input field. It accepts all the"," ",l.createElement("a",{href:"https://momentjs.com/docs/#/displaying/format/"},"format strings")," ","used by moment.js."),l.createElement("h3",{id:"hideOnDayClick"},"hideOnDayClick ",l.createElement("code",null,"Boolean = true")),l.createElement("p",null,"Hide the overlay when the user clicks on a day cell."),l.createElement("hr",null),l.createElement("h2",null,"Event handlers"),l.createElement("h3",{id:"onDayChange"},"onDayChange ",l.createElement("code",null,"(day: Date, modifiers: Object) ⇒ undefined")),l.createElement("p",null,"Handler function called when the user types a valid day (according to the ",l.createElement("code",null,"format")," prop) or when a day is clicked on the calendar. If the day is not valid, day and modifiers arguments will be"," ",l.createElement("code",null,"undefined")," (useful to display validation warnings)."),l.createElement("hr",null),l.createElement("h2",null,"Public methods"),l.createElement("h3",{id:"showDayPicker"},"showDayPicker ",l.createElement("code",null,"() ⇒ undefined")),l.createElement("p",null,"Show the Day Picker overlay."),l.createElement("h3",{id:"hideDayPicker"},"hideDayPicker ",l.createElement("code",null,"() ⇒ undefined")),l.createElement("p",null,"Hide the Day Picker overlay.")))},e.exports=t.default}).call(t,n(2))}});
//# sourceMappingURL=component---src-pages-api-day-picker-input-js-b26cdc60320373caea4f.js.map
{"version":3,"sources":["webpack:///component---src-pages-docs-matching-days-js-60512e004053b627e707.js","webpack:///./src/pages/docs/matching-days.js"],"names":["webpackJsonp","358","module","exports","__webpack_require__","Glamor","_interopRequireDefault","obj","__esModule","default","_react","_DocPage","_DocPage2","_CodeBlock","_CodeBlock2","_CodeSample","_CodeSample2","_NextButton","_NextButton2","createElement","title","name","href","to","label","call"],"mappings":"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","file":"component---src-pages-docs-matching-days-js-60512e004053b627e707.js","sourcesContent":["webpackJsonp([216458043548900],{\n\n/***/ 358:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Glamor) {'use strict';\n\t\n\texports.__esModule = true;\n\t\n\tvar _react = __webpack_require__(1);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _DocPage = __webpack_require__(21);\n\t\n\tvar _DocPage2 = _interopRequireDefault(_DocPage);\n\t\n\tvar _CodeBlock = __webpack_require__(22);\n\t\n\tvar _CodeBlock2 = _interopRequireDefault(_CodeBlock);\n\t\n\tvar _CodeSample = __webpack_require__(8);\n\t\n\tvar _CodeSample2 = _interopRequireDefault(_CodeSample);\n\t\n\tvar _NextButton = __webpack_require__(60);\n\t\n\tvar _NextButton2 = _interopRequireDefault(_NextButton);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = function () {\n\t  return Glamor.createElement(\n\t    _DocPage2.default,\n\t    { title: 'Matching days with modifiers' },\n\t    Glamor.createElement(\n\t      'p',\n\t      null,\n\t      'With ',\n\t      Glamor.createElement(\n\t        'em',\n\t        null,\n\t        'modifiers'\n\t      ),\n\t      ' you change the aspect of the day cells and customize the interaction with the calendar. When a modifier matches a specific day, its day cells receives a the modifier\\u2019s name as CSS class.'\n\t    ),\n\t    Glamor.createElement(\n\t      'p',\n\t      null,\n\t      'In the following example, the ',\n\t      Glamor.createElement(\n\t        'code',\n\t        null,\n\t        'highlighted'\n\t      ),\n\t      ' modifier is used to paint the 19th of September with an orange background. Using the browser\\u2019s developer tools, note how that day receives a',\n\t      ' ',\n\t      Glamor.createElement(\n\t        'code',\n\t        null,\n\t        'DayPicker-Day--highlighted'\n\t      ),\n\t      ' CSS class.'\n\t    ),\n\t    Glamor.createElement(_CodeSample2.default, { name: 'modifiers-01' }),\n\t    Glamor.createElement(\n\t      'blockquote',\n\t      null,\n\t      Glamor.createElement(\n\t        'p',\n\t        null,\n\t        'The modifiers\\u2019 CSS classes follow a',\n\t        ' ',\n\t        Glamor.createElement(\n\t          'a',\n\t          { href: 'https://css-tricks.com/bem-101/' },\n\t          'BEM-like syntax'\n\t        ),\n\t        ', but you can'\n\t      )\n\t    ),\n\t    Glamor.createElement(\n\t      'h2',\n\t      null,\n\t      'Type of modifiers'\n\t    ),\n\t    Glamor.createElement(\n\t      'p',\n\t      null,\n\t      'A modifier can be either:'\n\t    ),\n\t    Glamor.createElement(\n\t      'ul',\n\t      null,\n\t      Glamor.createElement(\n\t        'li',\n\t        null,\n\t        Glamor.createElement(\n\t          'p',\n\t          null,\n\t          Glamor.createElement(\n\t            'strong',\n\t            null,\n\t            'a ',\n\t            Glamor.createElement(\n\t              'code',\n\t              null,\n\t              'Date'\n\t            ),\n\t            ' object'\n\t          ),\n\t          Glamor.createElement('br', null),\n\t          'to match a specific day, as the example above'\n\t        )\n\t      ),\n\t      Glamor.createElement(\n\t        'li',\n\t        null,\n\t        Glamor.createElement(\n\t          'p',\n\t          null,\n\t          Glamor.createElement(\n\t            'strong',\n\t            null,\n\t            'a range object'\n\t          ),\n\t          ' with ',\n\t          Glamor.createElement(\n\t            'code',\n\t            null,\n\t            'from'\n\t          ),\n\t          ' and',\n\t          ' ',\n\t          Glamor.createElement(\n\t            'code',\n\t            null,\n\t            'to'\n\t          ),\n\t          ' keys',\n\t          Glamor.createElement('br', null),\n\t          'to match a range of days:',\n\t          Glamor.createElement(\n\t            _CodeBlock2.default,\n\t            null,\n\t            'const highlighted = { \\n  from: new Date(2018, 0, 12), \\n  to: new Date(2018, 0, 16) \\n}\\n<DayPicker modifiers={ highlighted } />\\n// .DayPicker-Day--highlighted\\n'\n\t          )\n\t        ),\n\t        Glamor.createElement(\n\t          'p',\n\t          null,\n\t          'will match the days between the 12th and the 16th of January.'\n\t        )\n\t      ),\n\t      Glamor.createElement(\n\t        'li',\n\t        null,\n\t        Glamor.createElement(\n\t          'p',\n\t          null,\n\t          Glamor.createElement(\n\t            'strong',\n\t            null,\n\t            'an object with a ',\n\t            Glamor.createElement(\n\t              'code',\n\t              null,\n\t              'before'\n\t            ),\n\t            ' and/or ',\n\t            Glamor.createElement(\n\t              'code',\n\t              null,\n\t              'after'\n\t            ),\n\t            ' key'\n\t          ),\n\t          Glamor.createElement('br', null),\n\t          'to match the days before and/or after the given date:'\n\t        ),\n\t        Glamor.createElement(\n\t          _CodeBlock2.default,\n\t          null,\n\t          'const past = { \\n  before: new Date(),\\n}\\n<DayPicker modifiers={ past } />\\n// .DayPicker-Day--past'\n\t        ),\n\t        Glamor.createElement(\n\t          'p',\n\t          null,\n\t          'The code above will match all the past the days (i.e. the days before today).'\n\t        ),\n\t        Glamor.createElement(\n\t          _CodeBlock2.default,\n\t          null,\n\t          'const future = { \\n  after: new Date(2018, 0, 1), \\n}\\n<DayPicker modifiers={ future } />\\n// .DayPicker-Day--future'\n\t        ),\n\t        Glamor.createElement(\n\t          'p',\n\t          null,\n\t          'The code above will match all the days after the January, 1st 2018.'\n\t        ),\n\t        Glamor.createElement(\n\t          _CodeBlock2.default,\n\t          null,\n\t          'const range = { \\n  after: new Date(2020, 5, 20), \\n  before: new Date(2020, 5, 30), \\n}\\n<DayPicker modifiers={ range } />\\n// .DayPicker-Day--range'\n\t        ),\n\t        Glamor.createElement(\n\t          'p',\n\t          null,\n\t          'The code above will match all the days between the 30th and the 20th of April 2018.'\n\t        )\n\t      ),\n\t      Glamor.createElement(\n\t        'li',\n\t        null,\n\t        Glamor.createElement(\n\t          'p',\n\t          null,\n\t          Glamor.createElement(\n\t            'strong',\n\t            null,\n\t            'an object with a ',\n\t            Glamor.createElement(\n\t              'code',\n\t              null,\n\t              'daysOfWeek'\n\t            ),\n\t            ' array'\n\t          ),\n\t          Glamor.createElement('br', null),\n\t          'to match specific days of week:'\n\t        ),\n\t        Glamor.createElement(\n\t          _CodeBlock2.default,\n\t          null,\n\t          'const weekends = { \\n  daysOfWeek: [0, 6],\\n}\\n<DayPicker modifiers={ weekends } />\\n// .DayPicker-Day--weekends'\n\t        ),\n\t        Glamor.createElement(\n\t          'p',\n\t          null,\n\t          'will match all the Sundays (',\n\t          Glamor.createElement(\n\t            'code',\n\t            null,\n\t            '0'\n\t          ),\n\t          ') and Saturdays (',\n\t          Glamor.createElement(\n\t            'code',\n\t            null,\n\t            '6'\n\t          ),\n\t          ')'\n\t        )\n\t      ),\n\t      Glamor.createElement(\n\t        'li',\n\t        null,\n\t        Glamor.createElement(\n\t          'p',\n\t          null,\n\t          Glamor.createElement(\n\t            'strong',\n\t            null,\n\t            'a function'\n\t          ),\n\t          ' taking the day as first argument and returning a boolean value:'\n\t        ),\n\t        Glamor.createElement(\n\t          _CodeBlock2.default,\n\t          null,\n\t          'function sunday(day) {\\n  return day.getDay() === 0;\\n}\\nfunction firstOfMonth(day) {\\n  return day.getDate() === 1;\\n}\\n<DayPicker modifiers={ {sunday, firstOfMonth} } />\\n// .DayPicker-Day--sunday, .DayPicker-Day--firstOfMonth'\n\t        )\n\t      ),\n\t      Glamor.createElement(\n\t        'li',\n\t        null,\n\t        Glamor.createElement(\n\t          'p',\n\t          null,\n\t          Glamor.createElement(\n\t            'strong',\n\t            null,\n\t            'an array of the above'\n\t          ),\n\t          ':'\n\t        ),\n\t        Glamor.createElement(\n\t          _CodeBlock2.default,\n\t          null,\n\t          '\\n<DayPicker modifiers={ [weekends, sunday, firstOfMonth] } />\\n// .DayPicker-Day--weekends, .DayPicker-Day--sunday, .DayPicker-Day--firstOfMonth'\n\t        )\n\t      )\n\t    ),\n\t    Glamor.createElement(\n\t      'h3',\n\t      null,\n\t      'Default modifiers'\n\t    ),\n\t    Glamor.createElement(\n\t      'ul',\n\t      null,\n\t      Glamor.createElement(\n\t        'li',\n\t        null,\n\t        Glamor.createElement(\n\t          'p',\n\t          null,\n\t          Glamor.createElement(\n\t            'code',\n\t            null,\n\t            '--today'\n\t          ),\n\t          ' is added to the today cell'\n\t        )\n\t      ),\n\t      Glamor.createElement(\n\t        'li',\n\t        null,\n\t        Glamor.createElement(\n\t          'p',\n\t          null,\n\t          Glamor.createElement(\n\t            'code',\n\t            null,\n\t            '--outside'\n\t          ),\n\t          ' is added for the day outside the month'\n\t        )\n\t      )\n\t    ),\n\t    Glamor.createElement(\n\t      'h3',\n\t      null,\n\t      'Shortcuts for ',\n\t      Glamor.createElement(\n\t        'code',\n\t        null,\n\t        'selected'\n\t      ),\n\t      ' and ',\n\t      Glamor.createElement(\n\t        'code',\n\t        null,\n\t        'disabled'\n\t      ),\n\t      ' modifiers'\n\t    ),\n\t    Glamor.createElement(\n\t      'p',\n\t      null,\n\t      'Under the hood, the ',\n\t      Glamor.createElement(\n\t        'code',\n\t        null,\n\t        'selectedDays'\n\t      ),\n\t      ' and',\n\t      ' ',\n\t      Glamor.createElement(\n\t        'code',\n\t        null,\n\t        'disabledDays'\n\t      ),\n\t      ' props act as shortcut for the',\n\t      ' ',\n\t      Glamor.createElement(\n\t        'code',\n\t        null,\n\t        'selected'\n\t      ),\n\t      ' and a ',\n\t      Glamor.createElement(\n\t        'code',\n\t        null,\n\t        'disabled'\n\t      ),\n\t      ' modifiers. The following renders the same calendar:'\n\t    ),\n\t    Glamor.createElement(\n\t      _CodeBlock2.default,\n\t      null,\n\t      'function isFirstOfMonth(day) {\\n  return day.getDate() === 1;\\n}\\n\\n<DayPicker disabledDays={ sundays } selectedDays={ isFirstOfMonth } />\\n\\n<DayPicker \\n  modifiers={ { \\n    disabled: { daysOfWeek: [0] }, \\n    selected: isFirstOfMonth \\n  }} \\n/>'\n\t    ),\n\t    Glamor.createElement(\n\t      'h2',\n\t      null,\n\t      'Accessing modifiers from event handlers'\n\t    ),\n\t    Glamor.createElement(\n\t      'p',\n\t      null,\n\t      'Modifiers are passed as argument to the event handlers.'\n\t    ),\n\t    Glamor.createElement(_CodeSample2.default, { name: 'modifiers-02' }),\n\t    Glamor.createElement(_NextButton2.default, { to: '/docs/styling', label: 'Styling' })\n\t  );\n\t};\n\t\n\tmodule.exports = exports['default'];\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)))\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-pages-docs-matching-days-js-60512e004053b627e707.js","import React from 'react';\n\nimport DocPage from '../../containers/DocPage';\nimport CodeBlock from '../../ui/CodeBlock';\nimport CodeSample from '../../ui/CodeSample';\n\nimport NextButton from '../../ui/NextButton';\n\nexport default () => (\n  <DocPage title=\"Matching days with modifiers\">\n    <p>\n      With <em>modifiers</em> you change the aspect of the day cells and\n      customize the interaction with the calendar. When a modifier matches a\n      specific day, its day cells receives a the modifier’s name as CSS class.\n    </p>\n    <p>\n      In the following example, the <code>highlighted</code> modifier is used to\n      paint the 19th of September with an orange background. Using the browser’s\n      developer tools, note how that day receives a{' '}\n      <code>DayPicker-Day--highlighted</code> CSS class.\n    </p>\n\n    <CodeSample name=\"modifiers-01\" />\n\n    <blockquote>\n      <p>\n        The modifiers’ CSS classes follow a{' '}\n        <a href=\"https://css-tricks.com/bem-101/\">BEM-like syntax</a>, but you\n        can\n      </p>\n    </blockquote>\n\n    <h2>Type of modifiers</h2>\n\n    <p>A modifier can be either:</p>\n\n    <ul>\n      <li>\n        <p>\n          <strong>\n            a <code>Date</code> object\n          </strong>\n          <br />to match a specific day, as the example above\n        </p>\n      </li>\n      <li>\n        <p>\n          <strong>a range object</strong> with <code>from</code> and{' '}\n          <code>to</code> keys<br />to match a range of days:\n          <CodeBlock>\n            {`const highlighted = { \n  from: new Date(2018, 0, 12), \n  to: new Date(2018, 0, 16) \n}\n<DayPicker modifiers={ highlighted } />\n// .DayPicker-Day--highlighted\n`}\n          </CodeBlock>\n        </p>\n        <p>will match the days between the 12th and the 16th of January.</p>\n      </li>\n      <li>\n        <p>\n          <strong>\n            an object with a <code>before</code> and/or <code>after</code> key\n          </strong>\n          <br />to match the days before and/or after the given date:\n        </p>\n        <CodeBlock>\n          {`const past = { \n  before: new Date(),\n}\n<DayPicker modifiers={ past } />\n// .DayPicker-Day--past`}\n        </CodeBlock>\n        <p>\n          The code above will match all the past the days (i.e. the days before\n          today).\n        </p>\n        <CodeBlock>\n          {`const future = { \n  after: new Date(2018, 0, 1), \n}\n<DayPicker modifiers={ future } />\n// .DayPicker-Day--future`}\n        </CodeBlock>\n        <p>\n          The code above will match all the days after the January, 1st 2018.\n        </p>\n        <CodeBlock>\n          {`const range = { \n  after: new Date(2020, 5, 20), \n  before: new Date(2020, 5, 30), \n}\n<DayPicker modifiers={ range } />\n// .DayPicker-Day--range`}\n        </CodeBlock>\n        <p>\n          The code above will match all the days between the 30th and the 20th\n          of April 2018.\n        </p>\n      </li>\n      <li>\n        <p>\n          <strong>\n            an object with a <code>daysOfWeek</code> array\n          </strong>\n          <br />to match specific days of week:\n        </p>\n        <CodeBlock>\n          {`const weekends = { \n  daysOfWeek: [0, 6],\n}\n<DayPicker modifiers={ weekends } />\n// .DayPicker-Day--weekends`}\n        </CodeBlock>\n        <p>\n          will match all the Sundays (<code>0</code>) and Saturdays (<code>6</code>)\n        </p>\n      </li>\n      <li>\n        <p>\n          <strong>a function</strong> taking the day as first argument and\n          returning a boolean value:\n        </p>\n        <CodeBlock>\n          {`function sunday(day) {\n  return day.getDay() === 0;\n}\nfunction firstOfMonth(day) {\n  return day.getDate() === 1;\n}\n<DayPicker modifiers={ {sunday, firstOfMonth} } />\n// .DayPicker-Day--sunday, .DayPicker-Day--firstOfMonth`}\n        </CodeBlock>\n      </li>\n      <li>\n        <p>\n          <strong>an array of the above</strong>:\n        </p>\n        <CodeBlock>{`\n<DayPicker modifiers={ [weekends, sunday, firstOfMonth] } />\n// .DayPicker-Day--weekends, .DayPicker-Day--sunday, .DayPicker-Day--firstOfMonth`}</CodeBlock>\n      </li>\n    </ul>\n\n    <h3>Default modifiers</h3>\n\n    <ul>\n      <li>\n        <p>\n          <code>--today</code> is added to the today cell\n        </p>\n      </li>\n      <li>\n        <p>\n          <code>--outside</code> is added for the day outside the month\n        </p>\n      </li>\n    </ul>\n\n    <h3>\n      Shortcuts for <code>selected</code> and <code>disabled</code> modifiers\n    </h3>\n\n    <p>\n      Under the hood, the <code>selectedDays</code> and{' '}\n      <code>disabledDays</code> props act as shortcut for the{' '}\n      <code>selected</code> and a <code>disabled</code> modifiers. The following\n      renders the same calendar:\n    </p>\n    <CodeBlock>{`function isFirstOfMonth(day) {\n  return day.getDate() === 1;\n}\n\n<DayPicker disabledDays={ sundays } selectedDays={ isFirstOfMonth } />\n\n<DayPicker \n  modifiers={ { \n    disabled: { daysOfWeek: [0] }, \n    selected: isFirstOfMonth \n  }} \n/>`}</CodeBlock>\n\n    <h2>Accessing modifiers from event handlers</h2>\n    <p>Modifiers are passed as argument to the event handlers.</p>\n    <CodeSample name=\"modifiers-02\" />\n\n    <NextButton to=\"/docs/styling\" label=\"Styling\" />\n  </DocPage>\n);\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/docs/matching-days.js"],"sourceRoot":""}
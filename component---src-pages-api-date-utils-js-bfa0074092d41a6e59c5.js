webpackJsonp([0xa1edfb40fa32],{348:function(e,t,a){(function(l){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0;var r=a(1),d=(n(r),a(22)),c=n(d),u=a(44),o=n(u),m=a(21),i=n(m),E=a(60),s=n(E);t.default=function(){return l.createElement(i.default,{title:"DateUtils API"},l.createElement("p",null,"Set of functions useful to work with dates and modifiers."),l.createElement(c.default,null,'import { DateUtils } from "react-day-picker";'),l.createElement("hr",null),l.createElement(s.default,null,l.createElement("h2",null,"Functions"),l.createElement("h3",null,l.createElement(o.default,{id:"addDayToRange"}),"addDayToRange"," ",l.createElement("code",null,"(day: Date, range: ?Object<from: ?Date, to: ?Date>) ⇒ Object<from: ?Date, to: ?Date>")),l.createElement("p",null,"Add ",l.createElement("code",null,"day")," to a range of days, returning a new range including that day. A range is an object with ",l.createElement("code",null,"from")," and"," ",l.createElement("code",null,"to")," keys. See the range example for an example using this function."),l.createElement(c.default,null,'import { DateUtils } from "react-day-picker";\n\nconst range = {\n  from: new Date(2015, 5, 14),\n  to: new Date(2015, 5, 18)\n}\nconst newRange = DateUtils.addDayToRange(new Date(2015, 5, 24), range);\n\nconsole.log(newRange.from) // 2015-05-24'),l.createElement("h3",null,l.createElement(o.default,{id:"addMonths"}),"addMonths ",l.createElement("code",null,"(date: Date, n: Number) ⇒ Date")),l.createElement("p",null,"Return ",l.createElement("code",null,"date")," as a new Date with ",l.createElement("code",null,"n")," months added. Missing days will be added to the final date, e.g."," ",l.createElement("code",null,"2016-03-31 + 1 month = 2016-05-01")," (since the 31th of April is missing)."),l.createElement("h3",null,l.createElement(o.default,{id:"clone"}),"clone ",l.createElement("code",null,"(date: date) ⇒ Date")),l.createElement("p",null,"Clone ",l.createElement("code",null,"date")," returning a new Date with the same time."),l.createElement("h3",null,l.createElement(o.default,{id:"isDayAfter"}),"isDayAfter ",l.createElement("code",null,"(day1: ?Date, day2: ?Date) ⇒ Boolean")),l.createElement("p",null,"Return ",l.createElement("code",null,"true")," if ",l.createElement("code",null,"day1")," is after ",l.createElement("code",null,"day2"),"."),l.createElement("h3",null,l.createElement(o.default,{id:"isDayBefore"}),"isDayBefore ",l.createElement("code",null,"(day1: ?Date, day2: ?Date) ⇒ Boolean")),l.createElement("p",null,"Return ",l.createElement("code",null,"true")," if ",l.createElement("code",null,"day1")," is before"," ",l.createElement("code",null,"day2"),"."),l.createElement("h3",null,l.createElement(o.default,{id:"isDayBetween"}),"isDayBetween ",l.createElement("code",null,"(day: Date, day1: Date, day2: Date) ⇒ Boolean")),l.createElement("p",null,"Returns ",l.createElement("code",null,"true")," if ",l.createElement("code",null,"day")," is between"," ",l.createElement("code",null,"day1")," and ",l.createElement("code",null,"day2"),", without including those days."),l.createElement("h3",null,l.createElement(o.default,{id:"isDayInRange"}),"isDayInRange"," ",l.createElement("code",null,"(day: Date, range: Object<from: ?Date, to: ?Date>) ⇒ Boolean")),l.createElement("p",null,"Returns ",l.createElement("code",null,"true")," if ",l.createElement("code",null,"day")," is included in the specified range of days."),l.createElement("h3",null,l.createElement(o.default,{id:"isFutureDay"}),"isFutureDay ",l.createElement("code",null,"(day: Date) ⇒ Boolean")),l.createElement("p",null,"Return ",l.createElement("code",null,"true")," if ",l.createElement("code",null,"day")," is in the future, i.e. is tomorrow or any day after tomorrow."),l.createElement("h3",null,l.createElement(o.default,{id:"isPastDay"}),"isPastDay ",l.createElement("code",null,"(day: Date) ⇒ Boolean")),l.createElement("p",null,"Return ",l.createElement("code",null,"true")," if ",l.createElement("code",null,"day")," is in the past, i.e. is yesterday or any day before yesterday."),l.createElement("h3",null,l.createElement(o.default,{id:"isSameDay"}),"isSameDay ",l.createElement("code",null,"(day1: ?Date, day2: ?Date) ⇒ Boolean")),l.createElement("p",null,"Return ",l.createElement("code",null,"true")," if ",l.createElement("code",null,"day1")," and",l.createElement("code",null,"day2")," are the same day.")))},e.exports=t.default}).call(t,a(2))}});
//# sourceMappingURL=component---src-pages-api-date-utils-js-bfa0074092d41a6e59c5.js.map
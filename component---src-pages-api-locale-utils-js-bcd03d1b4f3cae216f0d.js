webpackJsonp([0x607f265d06ac],{350:function(e,t,l){(function(n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}t.__esModule=!0;var r=l(1),o=(a(r),l(16)),c=a(o),u=l(22),i=a(u),m=l(21),d=a(m),s=l(59),f=a(s);t.default=function(){return n.createElement(d.default,{title:"LocaleUtils API"},n.createElement("p",null,"Set of functions used internally to localize the component."),n.createElement("p",null," ","In some cases, you may want to implement your own ",n.createElement("code",null,"LocaleUtils"),", or override some of its functions (see:"," ",n.createElement(c.default,{to:"/docs/localization"},"Localization"),"). For example, this code renders the month’s title as ",n.createElement("code",null,"M/YYYY")," instead of the default:"),n.createElement(i.default,null,'import DayPicker, { LocaleUtils } from "react-day-picker";\n\nfunction formatMonthTitle(d, locale) {\n return `${d.getMonth() + 1}/${d.getFullYear()}`\n}\n\n<DayPicker localeUtils={ { ...LocaleUtils, formatMonthTitle } } />\n'),n.createElement("hr",null),n.createElement(f.default,null,n.createElement("h2",null,"Functions"),n.createElement("h3",{id:"formatDay"},"formatDay ",n.createElement("code",null,"(day: Date, locale: String) ⇒ String")),n.createElement("p",null,"Format the string used as aria-label for the given ",n.createElement("code",null,"day"),"."),n.createElement("h3",{id:"formatMonthTitle"},"formatMonthTitle ",n.createElement("code",null,"(month: Date, locale: String) ⇒ String")),n.createElement("p",null,"Return the string used to format the month’s title for the given"," ",n.createElement("code",null,"month"),"."),n.createElement("h3",{id:"formatWeekdayLong"},"formatWeekdayLong ",n.createElement("code",null,"(i: Number, locale: String) ⇒ String")),n.createElement("p",null,"Return the string used to render the weekday’s long name (starting from",n.createElement("code",null,"0")," as Sunday)."),n.createElement("h3",{id:"formatWeekdayShort"},"formatWeekdayShort ",n.createElement("code",null,"(i: Number, locale: String) ⇒ String")),n.createElement("p",null,"Return the string used to render the weekday’s short name, e.g."," ",n.createElement("code",null,"Mo")," for",n.createElement("i",null,"Monday"),"."),n.createElement("h3",{id:"getFirstDayOfWeek"},"getFirstDayOfWeek ",n.createElement("code",null,"(locale: String) ⇒ Number")),n.createElement("p",null,"Return the first day of the week for the given locale (where"," ",n.createElement("code",null,"0"),"is Sunday)."),n.createElement("h3",{id:"getMonths"},"getMonths ",n.createElement("code",null,"(locale: String) ⇒ Number")),n.createElement("p",null,"Return the twelve months for the given locale (full name, e.g."," ",n.createElement("code",null,"January"),").")))},e.exports=t.default}).call(t,l(2))}});
//# sourceMappingURL=component---src-pages-api-locale-utils-js-bcd03d1b4f3cae216f0d.js.map